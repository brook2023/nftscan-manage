<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.NftPlatformMapper">

    <resultMap type="nftPlatform" id="NftPlatformResult">
        <id     property="id"       column="id"      />
        <result property="platform"       column="platform"      />
        <result property="website"     column="website"    />
        <result property="contractAddress"     column="contract_address"    />
        <result property="tags"     column="tags"    />
        <result property="twitter"     column="twitter"    />
        <result property="email"     column="email"    />
        <result property="discord"     column="discord"    />
        <result property="telegram"     column="telegram"    />
        <result property="github"     column="github"    />
        <result property="medium"     column="medium"    />
        <result property="descriptionEn"     column="description_en"    />
        <result property="descriptionCn"     column="description_cn"    />
        <result property="type"     column="type"    />
        <result property="isHot"     column="is_hot"    />
        <result property="recommendEn"     column="recommend_en"    />
        <result property="recommendCn"     column="recommend_cn"    />
        <result property="addressType"     column="address_type"    />

    </resultMap>

    <select id="selectPlatformList" parameterType="nftPlatform" resultMap="NftPlatformResult">
        select * from nft_platform_info
        where 1=1
        <if test="platform != null and platform != ''">
            AND platform like concat('%', #{platform}, '%')
        </if>
        <if test="addressType != null and addressType != ''">
            AND address_type = #{addressType}
        </if>
        order by platform
    </select>


    <insert id="insertPlatform" parameterType="nftPlatform">
        insert into nft_platform_info(
        platform,
        website,
        contract_address,
        tags,
        twitter,
        email,
        discord,
        telegram,
        github,
        medium,
        type,
        description_en,
        description_cn,
        is_hot,
        recommend_en,
        recommend_cn,
        address_type
        )values(
        #{platform},
        #{website},
        #{contractAddress},
        #{tags},
        #{twitter},
        #{email},
        #{discord},
        #{telegram},
        #{github},
        #{medium},
        #{type},
        #{descriptionEn},
        #{descriptionCn},
        #{isHot},
        #{recommendEn},
        #{recommendCn},
        #{addressType}
        )
    </insert>

    <delete id="deletePlatformByIds" parameterType="Long">
        delete from nft_platform_info where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updatePlatform" parameterType="nftPlatform">
        update nft_platform_info
        <set>
            contract_address=#{contractAddress},
            address_type=#{addressType}
        </set>
        where id= #{id}
    </update>

    <select id="selectPlatformById" parameterType="Long" resultMap="NftPlatformResult">
        select * from nft_platform_info
        where id = #{platformId}
    </select>

    <update id="updatePlatformIsHot" parameterType="nftPlatform">
        update nft_platform_info set is_hot=#{isHot} where platform=#{platform}
    </update>

    <update id="updatePlatformByName" parameterType="nftPlatform">
        update nft_platform_info
        <set>
            platform=#{platform},
            website=#{website},
            tags=#{tags},
            twitter=#{twitter},
            email=#{email},
            discord=#{discord},
            telegram=#{telegram},
            github=#{github},
            medium=#{medium},
            type=#{type},
            description_en=#{descriptionEn},
            description_cn=#{descriptionCn},
            is_hot=#{isHot},
            recommend_en=#{recommendEn},
            recommend_cn=#{recommendCn}
        </set>
        where platform= #{platform}
    </update>

</mapper>